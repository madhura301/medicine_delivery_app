-- =====================================================
-- COMPLETE MIGRATION SCRIPT
-- Medicine Delivery Application
-- Generated: 2025-10-05
-- =====================================================

-- This script creates the complete database schema and seeds all data
-- for the Medicine Delivery Application using ASP.NET Core Identity

BEGIN TRANSACTION;

-- =====================================================
-- SECTION 1: CREATE ASP.NET CORE IDENTITY TABLES
-- =====================================================

PRINT 'Creating ASP.NET Core Identity tables...';

-- Create AspNetRoles table
CREATE TABLE IF NOT EXISTS "AspNetRoles" (
    "Id" text NOT NULL,
    "Name" character varying(256) NULL,
    "NormalizedName" character varying(256) NULL,
    "ConcurrencyStamp" text NULL,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);

-- Create AspNetRoleClaims table
CREATE TABLE IF NOT EXISTS "AspNetRoleClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoleId" text NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);

-- Create AspNetUsers table
CREATE TABLE IF NOT EXISTS "AspNetUsers" (
    "Id" text NOT NULL,
    "UserName" character varying(256) NULL,
    "NormalizedUserName" character varying(256) NULL,
    "Email" character varying(256) NULL,
    "NormalizedEmail" character varying(256) NULL,
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text NULL,
    "SecurityStamp" text NULL,
    "ConcurrencyStamp" text NULL,
    "PhoneNumber" text NULL,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone NULL,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL,
    "FirstName" character varying(50) NULL,
    "LastName" character varying(50) NULL,
    "IsActive" boolean NOT NULL DEFAULT true,
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT NOW(),
    "LastLoginAt" timestamp with time zone NULL,
    CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id")
);

-- Create AspNetUserClaims table
CREATE TABLE IF NOT EXISTS "AspNetUserClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" text NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);

-- Create AspNetUserLogins table
CREATE TABLE IF NOT EXISTS "AspNetUserLogins" (
    "LoginProvider" text NOT NULL,
    "ProviderKey" text NOT NULL,
    "ProviderDisplayName" text NULL,
    "UserId" text NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);

-- Create AspNetUserRoles table
CREATE TABLE IF NOT EXISTS "AspNetUserRoles" (
    "UserId" text NOT NULL,
    "RoleId" text NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);

-- Create AspNetUserTokens table
CREATE TABLE IF NOT EXISTS "AspNetUserTokens" (
    "UserId" text NOT NULL,
    "LoginProvider" text NOT NULL,
    "Name" text NOT NULL,
    "Value" text NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);

-- =====================================================
-- SECTION 2: CREATE APPLICATION TABLES
-- =====================================================

PRINT 'Creating application tables...';

-- Create Permissions table
CREATE TABLE IF NOT EXISTS "Permissions" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" character varying(100) NOT NULL,
    "Description" character varying(500) NOT NULL,
    "Module" character varying(100) NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT NOW(),
    "IsActive" boolean NOT NULL DEFAULT true,
    CONSTRAINT "PK_Permissions" PRIMARY KEY ("Id")
);

-- Create RolePermissions table
CREATE TABLE IF NOT EXISTS "RolePermissions" (
    "RoleId" text NOT NULL,
    "PermissionId" integer NOT NULL,
    "GrantedAt" timestamp with time zone NOT NULL DEFAULT NOW(),
    "GrantedBy" text NULL,
    "IsActive" boolean NOT NULL DEFAULT true,
    CONSTRAINT "PK_RolePermissions" PRIMARY KEY ("RoleId", "PermissionId"),
    CONSTRAINT "FK_RolePermissions_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_RolePermissions_Permissions_PermissionId" FOREIGN KEY ("PermissionId") REFERENCES "Permissions" ("Id") ON DELETE CASCADE
);

-- Create Products table
CREATE TABLE IF NOT EXISTS "Products" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" character varying(200) NOT NULL,
    "Description" text NULL,
    "Price" decimal(18,2) NOT NULL,
    "StockQuantity" integer NOT NULL DEFAULT 0,
    "Category" character varying(100) NULL,
    "Manufacturer" character varying(200) NULL,
    "ExpiryDate" date NULL,
    "IsActive" boolean NOT NULL DEFAULT true,
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT NOW(),
    "UpdatedAt" timestamp with time zone NULL,
    CONSTRAINT "PK_Products" PRIMARY KEY ("Id")
);

-- Create Orders table
CREATE TABLE IF NOT EXISTS "Orders" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "OrderNumber" character varying(50) NOT NULL,
    "CustomerId" uuid NULL,
    "OrderDate" timestamp with time zone NOT NULL DEFAULT NOW(),
    "TotalAmount" decimal(18,2) NOT NULL,
    "Status" character varying(50) NOT NULL DEFAULT 'Pending',
    "DeliveryAddress" text NULL,
    "Notes" text NULL,
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT NOW(),
    "UpdatedAt" timestamp with time zone NULL,
    CONSTRAINT "PK_Orders" PRIMARY KEY ("Id")
);

-- Create OrderItems table
CREATE TABLE IF NOT EXISTS "OrderItems" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "OrderId" integer NOT NULL,
    "ProductId" integer NOT NULL,
    "Quantity" integer NOT NULL,
    "UnitPrice" decimal(18,2) NOT NULL,
    "TotalPrice" decimal(18,2) NOT NULL,
    CONSTRAINT "PK_OrderItems" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_OrderItems_Orders_OrderId" FOREIGN KEY ("OrderId") REFERENCES "Orders" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_OrderItems_Products_ProductId" FOREIGN KEY ("ProductId") REFERENCES "Products" ("Id") ON DELETE RESTRICT
);

-- Create MedicalStores table
CREATE TABLE IF NOT EXISTS "MedicalStores" (
    "MedicalStoreId" uuid NOT NULL DEFAULT gen_random_uuid(),
    "UserId" text NULL,
    "MedicalName" character varying(100) NOT NULL,
    "OwnerFirstName" character varying(100) NOT NULL,
    "OwnerLastName" character varying(100) NOT NULL,
    "OwnerMiddleName" character varying(100) NULL,
    "AddressLine1" character varying(300) NOT NULL,
    "AddressLine2" character varying(300) NULL,
    "City" character varying(100) NOT NULL,
    "State" character varying(100) NOT NULL,
    "PostalCode" character varying(20) NOT NULL,
    "Latitude" decimal(18,6) NULL,
    "Longitude" decimal(18,6) NULL,
    "MobileNumber" character varying(15) NOT NULL,
    "EmailId" character varying(50) NOT NULL,
    "AlternativeMobileNumber" character varying(15) NULL,
    "RegistrationStatus" boolean NOT NULL,
    "GSTIN" character varying(100) NULL,
    "PAN" character varying(100) NULL,
    "FSSAINo" character varying(100) NULL,
    "DLNo" character varying(100) NULL,
    "PharmacistFirstName" character varying(100) NOT NULL,
    "PharmacistLastName" character varying(100) NOT NULL,
    "PharmacistRegistrationNumber" character varying(100) NOT NULL,
    "PharmacistMobileNumber" character varying(15) NOT NULL,
    "CreatedOn" timestamp with time zone NOT NULL DEFAULT NOW(),
    "UpdatedOn" timestamp with time zone NULL,
    CONSTRAINT "PK_MedicalStores" PRIMARY KEY ("MedicalStoreId"),
    CONSTRAINT "FK_MedicalStores_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE SET NULL
);

-- Create CustomerSupports table
CREATE TABLE IF NOT EXISTS "CustomerSupports" (
    "CustomerSupportId" uuid NOT NULL DEFAULT gen_random_uuid(),
    "UserId" text NULL,
    "CustomerSupportFirstName" character varying(100) NOT NULL,
    "CustomerSupportLastName" character varying(100) NOT NULL,
    "CustomerSupportMiddleName" character varying(100) NULL,
    "Address" character varying(300) NOT NULL,
    "City" character varying(100) NOT NULL,
    "State" character varying(100) NOT NULL,
    "MobileNumber" character varying(15) NOT NULL,
    "EmailId" character varying(50) NOT NULL,
    "AlternativeMobileNumber" character varying(15) NULL,
    "EmployeeId" character varying(50) NOT NULL,
    "CustomerSupportPhoto" character varying(255) NULL,
    "CreatedOn" timestamp with time zone NOT NULL DEFAULT NOW(),
    "UpdatedOn" timestamp with time zone NULL,
    CONSTRAINT "PK_CustomerSupports" PRIMARY KEY ("CustomerSupportId"),
    CONSTRAINT "FK_CustomerSupports_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE SET NULL
);

-- Create Managers table
CREATE TABLE IF NOT EXISTS "Managers" (
    "ManagerId" uuid NOT NULL DEFAULT gen_random_uuid(),
    "UserId" text NULL,
    "ManagerFirstName" character varying(100) NOT NULL,
    "ManagerLastName" character varying(100) NOT NULL,
    "ManagerMiddleName" character varying(100) NULL,
    "Address" character varying(300) NOT NULL,
    "City" character varying(100) NOT NULL,
    "State" character varying(100) NOT NULL,
    "MobileNumber" character varying(15) NOT NULL,
    "EmailId" character varying(50) NOT NULL,
    "AlternativeMobileNumber" character varying(15) NULL,
    "EmployeeId" character varying(50) NOT NULL,
    "ManagerPhoto" character varying(255) NULL,
    "CreatedOn" timestamp with time zone NOT NULL DEFAULT NOW(),
    "UpdatedOn" timestamp with time zone NULL,
    CONSTRAINT "PK_Managers" PRIMARY KEY ("ManagerId"),
    CONSTRAINT "FK_Managers_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE SET NULL
);

-- Create Customers table
CREATE TABLE IF NOT EXISTS "Customers" (
    "CustomerId" uuid NOT NULL DEFAULT gen_random_uuid(),
    "UserId" text NULL,
    "CustomerFirstName" character varying(100) NOT NULL,
    "CustomerLastName" character varying(100) NOT NULL,
    "CustomerMiddleName" character varying(100) NULL,
    "MobileNumber" character varying(15) NOT NULL,
    "AlternativeMobileNumber" character varying(15) NULL,
    "EmailId" character varying(50) NULL,
    "Gender" character varying(10) NULL,
    "CustomerPhoto" character varying(255) NULL,
    "CreatedOn" timestamp with time zone NOT NULL DEFAULT NOW(),
    "UpdatedOn" timestamp with time zone NULL,
    CONSTRAINT "PK_Customers" PRIMARY KEY ("CustomerId"),
    CONSTRAINT "FK_Customers_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE SET NULL
);

-- Create CustomerAddresses table
CREATE TABLE IF NOT EXISTS "CustomerAddresses" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "CustomerId" uuid NOT NULL,
    "Address" character varying(300) NULL,
    "AddressLine1" character varying(300) NULL,
    "AddressLine2" character varying(300) NULL,
    "AddressLine3" character varying(300) NULL,
    "City" character varying(100) NULL,
    "State" character varying(100) NULL,
    "PostalCode" character varying(20) NULL,
    "IsDefault" boolean NOT NULL DEFAULT false,
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT NOW(),
    "UpdatedAt" timestamp with time zone NULL,
    CONSTRAINT "PK_CustomerAddresses" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_CustomerAddresses_Customers_CustomerId" FOREIGN KEY ("CustomerId") REFERENCES "Customers" ("CustomerId") ON DELETE CASCADE
);

-- =====================================================
-- SECTION 3: CREATE INDEXES
-- =====================================================

PRINT 'Creating indexes...';

-- AspNetRoles indexes
CREATE INDEX IF NOT EXISTS "IX_AspNetRoles_NormalizedName" ON "AspNetRoles" ("NormalizedName");

-- AspNetRoleClaims indexes
CREATE INDEX IF NOT EXISTS "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");

-- AspNetUsers indexes
CREATE INDEX IF NOT EXISTS "IX_AspNetUsers_NormalizedUserName" ON "AspNetUsers" ("NormalizedUserName");
CREATE INDEX IF NOT EXISTS "IX_AspNetUsers_NormalizedEmail" ON "AspNetUsers" ("NormalizedEmail");

-- AspNetUserClaims indexes
CREATE INDEX IF NOT EXISTS "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");

-- AspNetUserLogins indexes
CREATE INDEX IF NOT EXISTS "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");

-- AspNetUserRoles indexes
CREATE INDEX IF NOT EXISTS "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");

-- AspNetUserTokens indexes
CREATE INDEX IF NOT EXISTS "IX_AspNetUserTokens_UserId" ON "AspNetUserTokens" ("UserId");

-- RolePermissions indexes
CREATE INDEX IF NOT EXISTS "IX_RolePermissions_PermissionId" ON "RolePermissions" ("PermissionId");

-- Orders indexes
CREATE INDEX IF NOT EXISTS "IX_Orders_CustomerId" ON "Orders" ("CustomerId");

-- OrderItems indexes
CREATE INDEX IF NOT EXISTS "IX_OrderItems_OrderId" ON "OrderItems" ("OrderId");
CREATE INDEX IF NOT EXISTS "IX_OrderItems_ProductId" ON "OrderItems" ("ProductId");

-- CustomerAddresses indexes
CREATE INDEX IF NOT EXISTS "IX_CustomerAddresses_CustomerId" ON "CustomerAddresses" ("CustomerId");

-- =====================================================
-- SECTION 4: SEED DATA - PERMISSIONS
-- =====================================================

PRINT 'Seeding permissions data...';

INSERT INTO "Permissions" ("Id", "Name", "Description", "Module", "CreatedAt", "IsActive")
VALUES 
    (1, 'ReadUsers', 'Can view user information', 'Users', NOW(), true),
    (2, 'CreateUsers', 'Can create new users', 'Users', NOW(), true),
    (3, 'UpdateUsers', 'Can update user information', 'Users', NOW(), true),
    (4, 'DeleteUsers', 'Can delete users', 'Users', NOW(), true),
    (5, 'ReadProducts', 'Can view products', 'Products', NOW(), true),
    (6, 'CreateProducts', 'Can create new products', 'Products', NOW(), true),
    (7, 'UpdateProducts', 'Can update products', 'Products', NOW(), true),
    (8, 'DeleteProducts', 'Can delete products', 'Products', NOW(), true),
    (9, 'ReadOrders', 'Can view orders', 'Orders', NOW(), true),
    (10, 'CreateOrders', 'Can create new orders', 'Orders', NOW(), true),
    (11, 'UpdateOrders', 'Can update orders', 'Orders', NOW(), true),
    (12, 'DeleteOrders', 'Can delete orders', 'Orders', NOW(), true),
    (13, 'AdminReadUsers', 'Admin can view all user information', 'UserManagement', NOW(), true),
    (14, 'AdminCreateUsers', 'Admin can create users', 'UserManagement', NOW(), true),
    (15, 'AdminUpdateUsers', 'Admin can update user information', 'UserManagement', NOW(), true),
    (16, 'AdminDeleteUsers', 'Admin can delete users', 'UserManagement', NOW(), true),
    (17, 'ManagerReadUsers', 'Manager can view user information', 'UserManagement', NOW(), true),
    (18, 'ManagerCreateUsers', 'Manager can create users', 'UserManagement', NOW(), true),
    (19, 'ManagerUpdateUsers', 'Manager can update user information', 'UserManagement', NOW(), true),
    (20, 'ManagerDeleteUsers', 'Manager can delete users', 'UserManagement', NOW(), true),
    (21, 'CustomerSupportReadUsers', 'CustomerSupport can view user information', 'UserManagement', NOW(), true),
    (22, 'CustomerSupportCreateUsers', 'CustomerSupport can create users', 'UserManagement', NOW(), true),
    (23, 'CustomerSupportUpdateUsers', 'CustomerSupport can update user information', 'UserManagement', NOW(), true),
    (24, 'CustomerSupportDeleteUsers', 'CustomerSupport can delete users', 'UserManagement', NOW(), true),
    (25, 'ChemistReadUsers', 'Chemist can view user information', 'UserManagement', NOW(), true),
    (26, 'ChemistCreateUsers', 'Chemist can create users', 'UserManagement', NOW(), true),
    (27, 'ChemistUpdateUsers', 'Chemist can update user information', 'UserManagement', NOW(), true),
    (28, 'ChemistDeleteUsers', 'Chemist can delete users', 'UserManagement', NOW(), true),
    (29, 'ManageRolePermission', 'Can manage role permissions', 'RoleManagement', NOW(), true),
    (30, 'ChemistRead', 'Can read chemist information', 'Chemist', NOW(), true),
    (31, 'ChemistCreate', 'Can create chemist accounts', 'Chemist', NOW(), true),
    (32, 'ChemistUpdate', 'Can update chemist information', 'Chemist', NOW(), true),
    (33, 'ChemistDelete', 'Can delete chemist accounts', 'Chemist', NOW(), true),
    (34, 'CustomerSupportRead', 'Can read customer support information', 'CustomerSupport', NOW(), true),
    (35, 'CustomerSupportCreate', 'Can create customer support accounts', 'CustomerSupport', NOW(), true),
    (36, 'CustomerSupportUpdate', 'Can update customer support information', 'CustomerSupport', NOW(), true),
    (37, 'CustomerSupportDelete', 'Can delete customer support accounts', 'CustomerSupport', NOW(), true),
    (38, 'ManagerSupportRead', 'Can read manager information', 'Manager', NOW(), true),
    (39, 'ManagerSupportCreate', 'Can create manager accounts', 'Manager', NOW(), true),
    (40, 'ManagerSupportUpdate', 'Can update manager information', 'Manager', NOW(), true),
    (41, 'ManagerSupportDelete', 'Can delete manager accounts', 'Manager', NOW(), true),
    (42, 'CustomerRead', 'Can read own customer information', 'Customer', NOW(), true),
    (43, 'CustomerCreate', 'Can create customer accounts', 'Customer', NOW(), true),
    (44, 'CustomerUpdate', 'Can update own customer information', 'Customer', NOW(), true),
    (45, 'CustomerDelete', 'Can delete own customer account', 'Customer', NOW(), true),
    (46, 'AllCustomerRead', 'Can read all customer information', 'Customer', NOW(), true),
    (47, 'AllCustomerUpdate', 'Can update any customer information', 'Customer', NOW(), true),
    (48, 'AllCustomerDelete', 'Can delete any customer account', 'Customer', NOW(), true),
    (49, 'AllChemistRead', 'Can read all Chemist information', 'Chemist', NOW(), true),
    (50, 'AllChemistUpdate', 'Can update any Chemist information', 'Chemist', NOW(), true),
    (51, 'AllChemistDelete', 'Can delete any Chemist account', 'Chemist', NOW(), true);

-- =====================================================
-- SECTION 5: SEED DATA - IDENTITY ROLES
-- =====================================================

PRINT 'Seeding identity roles data...';

INSERT INTO "AspNetRoles" ("Id", "Name", "NormalizedName", "ConcurrencyStamp")
VALUES 
    ('11111111-1111-1111-1111-111111111111', 'Admin', 'ADMIN', 'eb3b6bd2-e740-45bd-91b5-a5627c4ab27d'),
    ('22222222-2222-2222-2222-222222222222', 'Manager', 'MANAGER', '38424e1e-b8df-4484-bb7c-2b01feecebe4'),
    ('33333333-3333-3333-3333-333333333333', 'CustomerSupport', 'CUSTOMERSUPPORT', 'ff9cf118-d192-4c50-900c-8eb5c92d5288'),
    ('44444444-4444-4444-4444-444444444444', 'Customer', 'CUSTOMER', '8c8930a9-68c0-4849-a307-0f8be968d489'),
    ('55555555-5555-5555-5555-555555555555', 'Chemist', 'CHEMIST', '79ec17b2-a6fc-4709-bfaf-71308fa70fd1');

-- =====================================================
-- SECTION 6: SEED DATA - ROLE PERMISSIONS
-- =====================================================

PRINT 'Seeding role permissions data...';

-- Admin Role Permissions (RoleId: 11111111-1111-1111-1111-111111111111)
INSERT INTO "RolePermissions" ("PermissionId", "RoleId", "GrantedAt", "GrantedBy", "IsActive")
VALUES 
    (1, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (2, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (3, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (4, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (5, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (6, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (7, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (8, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (9, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (10, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (11, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (12, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (13, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (14, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (15, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (16, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (17, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (18, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (19, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (20, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (21, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (22, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (23, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (24, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (25, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (26, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (27, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (28, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (29, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (30, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (31, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (32, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (33, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (34, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (35, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (36, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (37, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (38, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (39, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (40, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (41, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (43, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (46, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (47, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (48, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (49, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (50, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true),
    (51, '11111111-1111-1111-1111-111111111111', NOW(), NULL, true);

-- Manager Role Permissions (RoleId: 22222222-2222-2222-2222-222222222222)
INSERT INTO "RolePermissions" ("PermissionId", "RoleId", "GrantedAt", "GrantedBy", "IsActive")
VALUES 
    (1, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (3, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (5, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (7, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (9, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (11, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (17, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (18, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (19, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (20, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (21, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (22, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (23, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (24, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (25, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (26, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (27, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (28, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (30, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (31, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (32, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (33, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (34, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (35, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (36, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (37, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (38, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (40, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (41, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (43, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (46, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (47, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (48, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (49, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (50, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true),
    (51, '22222222-2222-2222-2222-222222222222', NOW(), NULL, true);

-- CustomerSupport Role Permissions (RoleId: 33333333-3333-3333-3333-333333333333)
INSERT INTO "RolePermissions" ("PermissionId", "RoleId", "GrantedAt", "GrantedBy", "IsActive")
VALUES 
    (5, '33333333-3333-3333-3333-333333333333', NOW(), NULL, true),
    (9, '33333333-3333-3333-3333-333333333333', NOW(), NULL, true),
    (10, '33333333-3333-3333-3333-333333333333', NOW(), NULL, true),
    (21, '33333333-3333-3333-3333-333333333333', NOW(), NULL, true),
    (22, '33333333-3333-3333-3333-333333333333', NOW(), NULL, true),
    (23, '33333333-3333-3333-3333-333333333333', NOW(), NULL, true),
    (24, '33333333-3333-3333-3333-333333333333', NOW(), NULL, true),
    (25, '33333333-3333-3333-3333-333333333333', NOW(), NULL, true),
    (26, '33333333-3333-3333-3333-333333333333', NOW(), NULL, true),
    (27, '33333333-3333-3333-3333-333333333333', NOW(), NULL, true),
    (28, '33333333-3333-3333-3333-333333333333', NOW(), NULL, true),
    (30, '33333333-3333-3333-3333-333333333333', NOW(), NULL, true),
    (31, '33333333-3333-3333-3333-333333333333', NOW(), NULL, true),
    (32, '33333333-3333-3333-3333-333333333333', NOW(), NULL, true),
    (33, '33333333-3333-3333-3333-333333333333', NOW(), NULL, true),
    (34, '33333333-3333-3333-3333-333333333333', NOW(), NULL, true),
    (36, '33333333-3333-3333-3333-333333333333', NOW(), NULL, true),
    (37, '33333333-3333-3333-3333-333333333333', NOW(), NULL, true),
    (43, '33333333-3333-3333-3333-333333333333', NOW(), NULL, true),
    (46, '33333333-3333-3333-3333-333333333333', NOW(), NULL, true),
    (47, '33333333-3333-3333-3333-333333333333', NOW(), NULL, true),
    (48, '33333333-3333-3333-3333-333333333333', NOW(), NULL, true),
    (49, '33333333-3333-3333-3333-333333333333', NOW(), NULL, true),
    (50, '33333333-3333-3333-3333-333333333333', NOW(), NULL, true),
    (51, '33333333-3333-3333-3333-333333333333', NOW(), NULL, true);

-- Customer Role Permissions (RoleId: 44444444-4444-4444-4444-444444444444)
INSERT INTO "RolePermissions" ("PermissionId", "RoleId", "GrantedAt", "GrantedBy", "IsActive")
VALUES 
    (5, '44444444-4444-4444-4444-444444444444', NOW(), NULL, true),
    (9, '44444444-4444-4444-4444-444444444444', NOW(), NULL, true),
    (10, '44444444-4444-4444-4444-444444444444', NOW(), NULL, true),
    (42, '44444444-4444-4444-4444-444444444444', NOW(), NULL, true),
    (44, '44444444-4444-4444-4444-444444444444', NOW(), NULL, true),
    (45, '44444444-4444-4444-4444-444444444444', NOW(), NULL, true);

-- Chemist Role Permissions (RoleId: 55555555-5555-5555-5555-555555555555)
INSERT INTO "RolePermissions" ("PermissionId", "RoleId", "GrantedAt", "GrantedBy", "IsActive")
VALUES 
    (5, '55555555-5555-5555-5555-555555555555', NOW(), NULL, true),
    (6, '55555555-5555-5555-5555-555555555555', NOW(), NULL, true),
    (7, '55555555-5555-5555-5555-555555555555', NOW(), NULL, true),
    (8, '55555555-5555-5555-5555-555555555555', NOW(), NULL, true),
    (9, '55555555-5555-5555-5555-555555555555', NOW(), NULL, true),
    (10, '55555555-5555-5555-5555-555555555555', NOW(), NULL, true),
    (11, '55555555-5555-5555-5555-555555555555', NOW(), NULL, true),
    (12, '55555555-5555-5555-5555-555555555555', NOW(), NULL, true),
    (30, '55555555-5555-5555-5555-555555555555', NOW(), NULL, true),
    (32, '55555555-5555-5555-5555-555555555555', NOW(), NULL, true),
    (33, '55555555-5555-5555-5555-555555555555', NOW(), NULL, true);

-- =====================================================
-- SECTION 7: VERIFICATION
-- =====================================================

PRINT 'Verification completed. Checking results...';

-- Verify tables were created
SELECT 'AspNetRoles' as TableName, COUNT(*) as RecordCount FROM "AspNetRoles";
SELECT 'AspNetUsers' as TableName, COUNT(*) as RecordCount FROM "AspNetUsers";
SELECT 'Permissions' as TableName, COUNT(*) as RecordCount FROM "Permissions";
SELECT 'RolePermissions' as TableName, COUNT(*) as RecordCount FROM "RolePermissions";
SELECT 'Products' as TableName, COUNT(*) as RecordCount FROM "Products";
SELECT 'Orders' as TableName, COUNT(*) as RecordCount FROM "Orders";
SELECT 'OrderItems' as TableName, COUNT(*) as RecordCount FROM "OrderItems";
SELECT 'MedicalStores' as TableName, COUNT(*) as RecordCount FROM "MedicalStores";
SELECT 'CustomerSupports' as TableName, COUNT(*) as RecordCount FROM "CustomerSupports";
SELECT 'Managers' as TableName, COUNT(*) as RecordCount FROM "Managers";
SELECT 'Customers' as TableName, COUNT(*) as RecordCount FROM "Customers";
SELECT 'CustomerAddresses' as TableName, COUNT(*) as RecordCount FROM "CustomerAddresses";

-- Show role summary
SELECT 
    r."Name" as RoleName,
    COUNT(rp."PermissionId") as PermissionCount
FROM "AspNetRoles" r
LEFT JOIN "RolePermissions" rp ON r."Id" = rp."RoleId"
GROUP BY r."Id", r."Name"
ORDER BY r."Name";

COMMIT TRANSACTION;

PRINT 'Complete migration script executed successfully!';
PRINT 'Database schema created with all tables, constraints, and seed data.';
PRINT 'All roles now use proper GUID identifiers.';
PRINT 'Role permission mappings have been established.';
