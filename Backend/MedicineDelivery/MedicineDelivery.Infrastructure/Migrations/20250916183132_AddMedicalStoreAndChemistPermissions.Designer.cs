// <auto-generated />
using System;
using MedicineDelivery.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MedicineDelivery.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250916183132_AddMedicalStoreAndChemistPermissions")]
    partial class AddMedicalStoreAndChemistPermissions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.MedicalStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("MedicalStores");
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(5),
                            Description = "Can view user information",
                            IsActive = true,
                            Module = "Users",
                            Name = "ReadUsers"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(7),
                            Description = "Can create new users",
                            IsActive = true,
                            Module = "Users",
                            Name = "CreateUsers"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(9),
                            Description = "Can update user information",
                            IsActive = true,
                            Module = "Users",
                            Name = "UpdateUsers"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(10),
                            Description = "Can delete users",
                            IsActive = true,
                            Module = "Users",
                            Name = "DeleteUsers"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(12),
                            Description = "Can view products",
                            IsActive = true,
                            Module = "Products",
                            Name = "ReadProducts"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(13),
                            Description = "Can create new products",
                            IsActive = true,
                            Module = "Products",
                            Name = "CreateProducts"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(14),
                            Description = "Can update products",
                            IsActive = true,
                            Module = "Products",
                            Name = "UpdateProducts"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(15),
                            Description = "Can delete products",
                            IsActive = true,
                            Module = "Products",
                            Name = "DeleteProducts"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(16),
                            Description = "Can view orders",
                            IsActive = true,
                            Module = "Orders",
                            Name = "ReadOrders"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(18),
                            Description = "Can create new orders",
                            IsActive = true,
                            Module = "Orders",
                            Name = "CreateOrders"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(19),
                            Description = "Can update orders",
                            IsActive = true,
                            Module = "Orders",
                            Name = "UpdateOrders"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(20),
                            Description = "Can delete orders",
                            IsActive = true,
                            Module = "Orders",
                            Name = "DeleteOrders"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(21),
                            Description = "Admin can view all user information",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "AdminReadUsers"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(22),
                            Description = "Admin can create users",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "AdminCreateUsers"
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(23),
                            Description = "Admin can update user information",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "AdminUpdateUsers"
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(24),
                            Description = "Admin can delete users",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "AdminDeleteUsers"
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(26),
                            Description = "Manager can view user information",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "ManagerReadUsers"
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(27),
                            Description = "Manager can create users",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "ManagerCreateUsers"
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(28),
                            Description = "Manager can update user information",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "ManagerUpdateUsers"
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(29),
                            Description = "Manager can delete users",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "ManagerDeleteUsers"
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(30),
                            Description = "CustomerSupport can view user information",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "CustomerSupportReadUsers"
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(31),
                            Description = "CustomerSupport can create users",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "CustomerSupportCreateUsers"
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(33),
                            Description = "CustomerSupport can update user information",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "CustomerSupportUpdateUsers"
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(34),
                            Description = "CustomerSupport can delete users",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "CustomerSupportDeleteUsers"
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(35),
                            Description = "Chemist can view user information",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "ChemistReadUsers"
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(37),
                            Description = "Chemist can create users",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "ChemistCreateUsers"
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(38),
                            Description = "Chemist can update user information",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "ChemistUpdateUsers"
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(39),
                            Description = "Chemist can delete users",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "ChemistDeleteUsers"
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(40),
                            Description = "Can manage role permissions",
                            IsActive = true,
                            Module = "RoleManagement",
                            Name = "ManageRolePermission"
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(41),
                            Description = "Can read chemist information",
                            IsActive = true,
                            Module = "Chemist",
                            Name = "ChemistRead"
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(42),
                            Description = "Can create chemist accounts",
                            IsActive = true,
                            Module = "Chemist",
                            Name = "ChemistCreate"
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(43),
                            Description = "Can update chemist information",
                            IsActive = true,
                            Module = "Chemist",
                            Name = "ChemistUpdate"
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(73),
                            Description = "Can delete chemist accounts",
                            IsActive = true,
                            Module = "Chemist",
                            Name = "ChemistDelete"
                        });
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(219),
                            Description = "Full system access",
                            IsActive = true,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(221),
                            Description = "Management level access",
                            IsActive = true,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(222),
                            Description = "Customer support access",
                            IsActive = true,
                            Name = "CustomerSupport"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(223),
                            Description = "Customer access",
                            IsActive = true,
                            Name = "Customer"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(224),
                            Description = "Chemist/pharmacist access",
                            IsActive = true,
                            Name = "Chemist"
                        });
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.RolePermission", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("GrantedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("GrantedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            PermissionId = 1,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(245),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 2,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(247),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 3,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(248),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 4,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(249),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 5,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(250),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 6,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(251),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 7,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(252),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 8,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(253),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 9,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(254),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 10,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(254),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 11,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(255),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 12,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(256),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 13,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(257),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 14,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(258),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 15,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(259),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 16,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(260),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 17,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(261),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 18,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(262),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 19,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(263),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 20,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(263),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 21,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(264),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 22,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(265),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 23,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(266),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 24,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(267),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 25,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(268),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 26,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(269),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 27,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(270),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 28,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(271),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 29,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(271),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 30,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(272),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 31,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(273),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 32,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(274),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 33,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(275),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 1,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(276),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 3,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(277),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 5,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(278),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 7,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(279),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 9,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(280),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 11,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(281),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 17,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(282),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 18,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(283),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 19,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(285),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 20,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(286),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 21,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(287),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 22,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(287),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 23,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(288),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 24,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(289),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 25,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(290),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 26,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(291),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 27,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(293),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 28,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(294),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 30,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(295),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 31,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(296),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 32,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(297),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 33,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(298),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 5,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(299),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 9,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(299),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 10,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(300),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 21,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(301),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 22,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(302),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 23,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(303),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 24,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(304),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 25,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(305),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 26,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(306),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 27,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(306),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 28,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(307),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 30,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(308),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 31,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(309),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 32,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(310),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 33,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(311),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 4,
                            PermissionId = 5,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(312),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 4,
                            PermissionId = 9,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(313),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 4,
                            PermissionId = 10,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(314),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 5,
                            PermissionId = 5,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(316),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 5,
                            PermissionId = 6,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(317),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 5,
                            PermissionId = 7,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(317),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 5,
                            PermissionId = 8,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(318),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 5,
                            PermissionId = 9,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(319),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 5,
                            PermissionId = 10,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(320),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 5,
                            PermissionId = 11,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(360),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 5,
                            PermissionId = 12,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(361),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 5,
                            PermissionId = 30,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(362),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 5,
                            PermissionId = 32,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(363),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 5,
                            PermissionId = 33,
                            GrantedAt = new DateTime(2025, 9, 16, 18, 31, 31, 211, DateTimeKind.Utc).AddTicks(364),
                            IsActive = true
                        });
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.UserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AssignedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("AssignedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("MedicineDelivery.Infrastructure.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.MedicalStore", b =>
                {
                    b.HasOne("MedicineDelivery.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("User");
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("MedicineDelivery.Domain.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicineDelivery.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.RolePermission", b =>
                {
                    b.HasOne("MedicineDelivery.Domain.Entities.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicineDelivery.Domain.Entities.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.UserRole", b =>
                {
                    b.HasOne("MedicineDelivery.Domain.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicineDelivery.Domain.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MedicineDelivery.Infrastructure.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MedicineDelivery.Infrastructure.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicineDelivery.Infrastructure.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MedicineDelivery.Infrastructure.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
