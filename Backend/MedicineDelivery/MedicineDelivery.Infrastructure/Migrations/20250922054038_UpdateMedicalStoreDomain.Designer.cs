// <auto-generated />
using System;
using MedicineDelivery.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MedicineDelivery.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250922054038_UpdateMedicalStoreDomain")]
    partial class UpdateMedicalStoreDomain
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("AlternativeMobileNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("CustomerFirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CustomerLastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CustomerMiddleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CustomerPhoto")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("State")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CustomerId");

                    b.HasIndex("UserId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.CustomerSupport", b =>
                {
                    b.Property<Guid>("CustomerSupportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("AlternativeMobileNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("CustomerSupportFirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CustomerSupportLastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CustomerSupportMiddleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CustomerSupportPhoto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CustomerSupportId");

                    b.HasIndex("UserId");

                    b.ToTable("CustomerSupports");
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.Manager", b =>
                {
                    b.Property<Guid>("ManagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("AlternativeMobileNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ManagerFirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ManagerLastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ManagerMiddleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ManagerPhoto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ManagerId");

                    b.HasIndex("UserId");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.MedicalStore", b =>
                {
                    b.Property<Guid>("MedicalStoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("AlternativeMobileNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("DLNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FSSAINo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GSTIN")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("MedicalName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("OwnerFirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OwnerLastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OwnerMiddleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PAN")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PharmacistFirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PharmacistLastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PharmacistMobileNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PharmacistRegistrationNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("RegistrationStatus")
                        .HasColumnType("bit");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MedicalStoreId");

                    b.HasIndex("UserId");

                    b.ToTable("MedicalStores");
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2837),
                            Description = "Can view user information",
                            IsActive = true,
                            Module = "Users",
                            Name = "ReadUsers"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2840),
                            Description = "Can create new users",
                            IsActive = true,
                            Module = "Users",
                            Name = "CreateUsers"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2842),
                            Description = "Can update user information",
                            IsActive = true,
                            Module = "Users",
                            Name = "UpdateUsers"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2843),
                            Description = "Can delete users",
                            IsActive = true,
                            Module = "Users",
                            Name = "DeleteUsers"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2844),
                            Description = "Can view products",
                            IsActive = true,
                            Module = "Products",
                            Name = "ReadProducts"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2846),
                            Description = "Can create new products",
                            IsActive = true,
                            Module = "Products",
                            Name = "CreateProducts"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2847),
                            Description = "Can update products",
                            IsActive = true,
                            Module = "Products",
                            Name = "UpdateProducts"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2848),
                            Description = "Can delete products",
                            IsActive = true,
                            Module = "Products",
                            Name = "DeleteProducts"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2850),
                            Description = "Can view orders",
                            IsActive = true,
                            Module = "Orders",
                            Name = "ReadOrders"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2851),
                            Description = "Can create new orders",
                            IsActive = true,
                            Module = "Orders",
                            Name = "CreateOrders"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2853),
                            Description = "Can update orders",
                            IsActive = true,
                            Module = "Orders",
                            Name = "UpdateOrders"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2854),
                            Description = "Can delete orders",
                            IsActive = true,
                            Module = "Orders",
                            Name = "DeleteOrders"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2855),
                            Description = "Admin can view all user information",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "AdminReadUsers"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2857),
                            Description = "Admin can create users",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "AdminCreateUsers"
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2858),
                            Description = "Admin can update user information",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "AdminUpdateUsers"
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2859),
                            Description = "Admin can delete users",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "AdminDeleteUsers"
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2860),
                            Description = "Manager can view user information",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "ManagerReadUsers"
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2861),
                            Description = "Manager can create users",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "ManagerCreateUsers"
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2863),
                            Description = "Manager can update user information",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "ManagerUpdateUsers"
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2864),
                            Description = "Manager can delete users",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "ManagerDeleteUsers"
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2865),
                            Description = "CustomerSupport can view user information",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "CustomerSupportReadUsers"
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2867),
                            Description = "CustomerSupport can create users",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "CustomerSupportCreateUsers"
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2868),
                            Description = "CustomerSupport can update user information",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "CustomerSupportUpdateUsers"
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2870),
                            Description = "CustomerSupport can delete users",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "CustomerSupportDeleteUsers"
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2871),
                            Description = "Chemist can view user information",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "ChemistReadUsers"
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2872),
                            Description = "Chemist can create users",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "ChemistCreateUsers"
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2873),
                            Description = "Chemist can update user information",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "ChemistUpdateUsers"
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2874),
                            Description = "Chemist can delete users",
                            IsActive = true,
                            Module = "UserManagement",
                            Name = "ChemistDeleteUsers"
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2876),
                            Description = "Can manage role permissions",
                            IsActive = true,
                            Module = "RoleManagement",
                            Name = "ManageRolePermission"
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2877),
                            Description = "Can read chemist information",
                            IsActive = true,
                            Module = "Chemist",
                            Name = "ChemistRead"
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2878),
                            Description = "Can create chemist accounts",
                            IsActive = true,
                            Module = "Chemist",
                            Name = "ChemistCreate"
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2879),
                            Description = "Can update chemist information",
                            IsActive = true,
                            Module = "Chemist",
                            Name = "ChemistUpdate"
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2880),
                            Description = "Can delete chemist accounts",
                            IsActive = true,
                            Module = "Chemist",
                            Name = "ChemistDelete"
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2881),
                            Description = "Can read customer support information",
                            IsActive = true,
                            Module = "CustomerSupport",
                            Name = "CustomerSupportRead"
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2882),
                            Description = "Can create customer support accounts",
                            IsActive = true,
                            Module = "CustomerSupport",
                            Name = "CustomerSupportCreate"
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2883),
                            Description = "Can update customer support information",
                            IsActive = true,
                            Module = "CustomerSupport",
                            Name = "CustomerSupportUpdate"
                        },
                        new
                        {
                            Id = 37,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2885),
                            Description = "Can delete customer support accounts",
                            IsActive = true,
                            Module = "CustomerSupport",
                            Name = "CustomerSupportDelete"
                        },
                        new
                        {
                            Id = 38,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2886),
                            Description = "Can read manager information",
                            IsActive = true,
                            Module = "Manager",
                            Name = "ManagerSupportRead"
                        },
                        new
                        {
                            Id = 39,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2887),
                            Description = "Can create manager accounts",
                            IsActive = true,
                            Module = "Manager",
                            Name = "ManagerSupportCreate"
                        },
                        new
                        {
                            Id = 40,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2889),
                            Description = "Can update manager information",
                            IsActive = true,
                            Module = "Manager",
                            Name = "ManagerSupportUpdate"
                        },
                        new
                        {
                            Id = 41,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2890),
                            Description = "Can delete manager accounts",
                            IsActive = true,
                            Module = "Manager",
                            Name = "ManagerSupportDelete"
                        },
                        new
                        {
                            Id = 42,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2891),
                            Description = "Can read own customer information",
                            IsActive = true,
                            Module = "Customer",
                            Name = "CustomerRead"
                        },
                        new
                        {
                            Id = 43,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2916),
                            Description = "Can create customer accounts",
                            IsActive = true,
                            Module = "Customer",
                            Name = "CustomerCreate"
                        },
                        new
                        {
                            Id = 44,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2917),
                            Description = "Can update own customer information",
                            IsActive = true,
                            Module = "Customer",
                            Name = "CustomerUpdate"
                        },
                        new
                        {
                            Id = 45,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2918),
                            Description = "Can delete own customer account",
                            IsActive = true,
                            Module = "Customer",
                            Name = "CustomerDelete"
                        },
                        new
                        {
                            Id = 46,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2920),
                            Description = "Can read all customer information",
                            IsActive = true,
                            Module = "Customer",
                            Name = "AllCustomerRead"
                        },
                        new
                        {
                            Id = 47,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2921),
                            Description = "Can update any customer information",
                            IsActive = true,
                            Module = "Customer",
                            Name = "AllCustomerUpdate"
                        },
                        new
                        {
                            Id = 48,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2922),
                            Description = "Can delete any customer account",
                            IsActive = true,
                            Module = "Customer",
                            Name = "AllCustomerDelete"
                        },
                        new
                        {
                            Id = 49,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2923),
                            Description = "Can read all Chemist information",
                            IsActive = true,
                            Module = "Chemist",
                            Name = "AllChemistRead"
                        },
                        new
                        {
                            Id = 50,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2924),
                            Description = "Can update any Chemist information",
                            IsActive = true,
                            Module = "Chemist",
                            Name = "AllChemistUpdate"
                        },
                        new
                        {
                            Id = 51,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(2925),
                            Description = "Can delete any Chemist account",
                            IsActive = true,
                            Module = "Chemist",
                            Name = "AllChemistDelete"
                        });
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3092),
                            Description = "Full system access",
                            IsActive = true,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3094),
                            Description = "Management level access",
                            IsActive = true,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3096),
                            Description = "Customer support access",
                            IsActive = true,
                            Name = "CustomerSupport"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3097),
                            Description = "Customer access",
                            IsActive = true,
                            Name = "Customer"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3098),
                            Description = "Chemist/pharmacist access",
                            IsActive = true,
                            Name = "Chemist"
                        });
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.RolePermission", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("GrantedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("GrantedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            PermissionId = 1,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3122),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 2,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3124),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 3,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3125),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 4,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3126),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 5,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3127),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 6,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3128),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 7,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3129),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 8,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3130),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 9,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3131),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 10,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3132),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 11,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3133),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 12,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3134),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 13,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3134),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 14,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3135),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 15,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3136),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 16,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3137),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 17,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3138),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 18,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3139),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 19,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3140),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 20,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3141),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 21,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3142),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 22,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3143),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 23,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3144),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 24,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3145),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 25,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3146),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 26,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3147),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 27,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3148),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 28,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3148),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 29,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3149),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 30,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3150),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 31,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3151),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 32,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3152),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 33,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3153),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 34,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3154),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 35,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3155),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 36,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3156),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 37,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3157),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 38,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3158),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 39,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3159),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 40,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3159),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 41,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3160),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 46,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3161),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 47,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3162),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 48,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3163),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 43,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3164),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 49,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3166),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 50,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3167),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 51,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3167),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 1,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3168),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 3,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3169),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 5,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3170),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 7,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3171),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 9,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3172),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 11,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3173),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 17,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3174),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 18,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3175),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 19,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3176),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 20,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3177),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 21,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3178),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 22,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3179),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 23,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3180),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 24,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3195),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 25,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3196),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 26,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3197),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 27,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3198),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 28,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3199),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 30,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3200),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 31,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3201),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 32,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3202),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 33,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3203),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 34,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3204),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 35,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3206),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 36,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3207),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 37,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3208),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 38,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3209),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 40,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3210),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 41,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3211),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 46,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3212),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 47,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3213),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 48,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3214),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 43,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3215),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 49,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3216),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 50,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3217),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 51,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3218),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 5,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3219),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 9,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3219),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 10,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3220),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 21,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3221),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 22,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3222),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 23,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3223),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 24,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3224),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 25,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3225),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 26,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3226),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 27,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3227),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 28,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3228),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 30,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3229),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 31,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3230),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 32,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3231),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 33,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3232),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 34,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3233),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 36,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3233),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 37,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3234),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 46,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3235),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 47,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3236),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 48,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3237),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 43,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3238),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 49,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3239),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 50,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3240),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 51,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3241),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 4,
                            PermissionId = 5,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3241),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 4,
                            PermissionId = 9,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3243),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 4,
                            PermissionId = 10,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3244),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 4,
                            PermissionId = 42,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3244),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 4,
                            PermissionId = 44,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3245),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 4,
                            PermissionId = 45,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3246),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 5,
                            PermissionId = 5,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3247),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 5,
                            PermissionId = 6,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3249),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 5,
                            PermissionId = 7,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3250),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 5,
                            PermissionId = 8,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3251),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 5,
                            PermissionId = 9,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3252),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 5,
                            PermissionId = 10,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3253),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 5,
                            PermissionId = 11,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3253),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 5,
                            PermissionId = 12,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3254),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 5,
                            PermissionId = 30,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3255),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 5,
                            PermissionId = 32,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3256),
                            IsActive = true
                        },
                        new
                        {
                            RoleId = 5,
                            PermissionId = 33,
                            GrantedAt = new DateTime(2025, 9, 22, 5, 40, 36, 969, DateTimeKind.Utc).AddTicks(3257),
                            IsActive = true
                        });
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.UserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AssignedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("AssignedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("MedicineDelivery.Infrastructure.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.Customer", b =>
                {
                    b.HasOne("MedicineDelivery.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("User");
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.CustomerSupport", b =>
                {
                    b.HasOne("MedicineDelivery.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("User");
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.Manager", b =>
                {
                    b.HasOne("MedicineDelivery.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("User");
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.MedicalStore", b =>
                {
                    b.HasOne("MedicineDelivery.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("User");
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("MedicineDelivery.Domain.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicineDelivery.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.RolePermission", b =>
                {
                    b.HasOne("MedicineDelivery.Domain.Entities.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicineDelivery.Domain.Entities.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.UserRole", b =>
                {
                    b.HasOne("MedicineDelivery.Domain.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicineDelivery.Domain.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MedicineDelivery.Infrastructure.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MedicineDelivery.Infrastructure.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicineDelivery.Infrastructure.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MedicineDelivery.Infrastructure.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("MedicineDelivery.Domain.Entities.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
